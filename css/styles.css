/* дочірний селектор */
.menu > li {
  border: 1px solid tomato; /* рамка (кордон) */
}
/* Застосовується до посилань, які лежать усередині неупорядкованих списків */
ul a {
  color: tomato;
}
/* Застосовується лише до посилань, що лежать усередині тега з класом social-links */
.social-links a {
  color: tomato;
}
/* активується коли курсор миші на елементі */
a:hover {
  color: yellow;
}
/* активується при взаємодії */
a:active {
  color: red;
}
/* активується при фокусі (ТАБ) або при натисканні */
a:focus {
  color: blueviolet;
}
/* стиль до окремого ID */
#name_id {
  text-align: center;
}
/*всі елементи*/
* {
  color: blueviolet;
}
/*селектор атрибута*/
[gref] {
  color: blueviolet;
}
/*крайній елемент*/
.item:last-child {
}

/*перший елемент*/
.item:first-child {
}

.item:nth-child(2n) {
} /*або (even) - парні елементи. (2n+1) або (odd) - не парні. 2 - який кожен. +1 - з якого починаючи. */

/*дозволяє вибрати всі елементи, що не підходять під критерій*/
.list-item:not(:last-child) {
}

/*створює псевдоелемент перед всім вмістом елемента (на початку)*/
.box::before {
}

/*створює псевдоелемент після всього вмісту елемента (наприкінці)*/
.box::after {
}

/*3мінити стилі псевдоелемента при події на батьківському елементі*/
.box:hover::before {
  background-color: green;
}

/* оформлення тексту підказки */
input::placeholder {
}

/* стилі тексту підказки при наведенні миші або фокусі поля введення */
input:hover::placeholder,
input:focus::placeholder {
}

/* дозволяє налаштовувати властивості поля вводу під час відображення тексту-підказки */
input:placeholder-shown {
}

/* зміна елемента вооду при фокусі */
form:focus-within {
}

/* застосовується до: радіокнопок, чекбоксів, опцій випадаючого меню в селектах. Він дозволяє додати стилі тільки до зазначених полів (інтерактивів) */
input:checked {
}

/* задати стилі всім селекторам з такою назвою і таким атрибутом */
selector[attribute_name='...'] {
}

/* вибирає тільки той елемент Y, який в HTML-розмітці слідує відразу ж за X */
x + y {
}

/* стилізації неактивного елемента */
.xxx: disabled;

/* медіаправило яке застосовується від/до зазначеного розміру екрана */
@media (min-width: 500px) {
  .selektor {
    color: white;
  }
}

/* дозволяє визначити стилі, що будуть застосовані при відправці на друк */
@media print {
  body {
    color: green;
  }
}

/* визначає стилі, що будуть застосовані тільки для пристроїв з фізичним екраном: смартфони, планшети, монітори, телевізори тощо. Тобто все, що не охоплює тип print */
@media screen and (min-width: 400px) {
  /* ... */
}

/* Такий медіазапит виконається тільки при виконанні двох умов: Веб-сторінка відкрита на екрані. Ширина області перегляду знаходиться в діапазоні від 400px до 800px.
 */
@media screen and (min-width: 400px) and (max-width: 800px) {
  body {
    background-color: red;
  }
}

/* , = or */
@media screen and (max-width: 600px), (min-width: 900px) {
  body {
    background-color: orange;
  }
}

/* Щоб визначити щільність пікселів екрана CSS, є медіафункції: resolution, min-resolution і max-resolution. Вони дозволяють перевірити точний збіг і мінімальне/максимальне значення щільності пікселів пристрою */
@media (min-resolution: 192dpi) {
  .box {
    background-image: url('photo@2x.png');
  }
}
